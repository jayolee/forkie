{"version":3,"sources":["images/fork.svg","images/home.svg","images/messages.svg","images/recipe.svg","images/profile.svg","images/home_on.svg","images/messages_on.svg","images/recipe_on.svg","images/profile_on.svg","home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","src","fork","Component","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","page","home","homeOn","msg","mail","mailOn","recipe","recipeOn","profile","profileOn","menu","src_home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4XCgHzBC,mLA3GX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAjB,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UAAjB,MAEHH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAjB,8BAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WAAjB,4CAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UAAjB,yBAMFH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAjB,mBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WAAjB,uCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAY,SAC5BH,EAAAC,EAAAC,cAAA,iCAOJF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAjB,qBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WAAjB,2DAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAAjB,eADA,6BAQFH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eAAjB,8BAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WAAjB,wCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UAAjB,0CAMAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAjB,mBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WAAjB,yBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UAAjB,qBAMFH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAjB,mBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WAAjB,yBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UAAjB,6BAnGSG,aC4CJC,qBAhCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,KAAM,GAERR,EAAKS,KAAO,CAACA,IAAMC,KACnBV,EAAKW,IAAM,CAACC,IAAMC,KAClBb,EAAKc,OAAS,CAACA,IAAQC,KACvBf,EAAKgB,QAAU,CAACA,IAASC,KAEzBjB,EAAKkB,KAAO,CAAClB,EAAKS,KAAK,GAAIT,EAAKW,IAAI,GAAIX,EAAKc,OAAO,GAAId,EAAKgB,QAAQ,IAVpDhB,wEAgBjB,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACfH,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAOQ,KAAKe,KAAK,KACtB3B,EAAAC,EAAAC,cAAA,OAAKE,IAAOQ,KAAKe,KAAK,KACtB3B,EAAAC,EAAAC,cAAA,OAAKE,IAAOQ,KAAKe,KAAK,KACtB3B,EAAAC,EAAAC,cAAA,OAAKE,IAAMQ,KAAKe,KAAK,eA1BfrB,cCDEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3561bb4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fork.48fedadb.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.5f1ff5d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/messages.1df2524f.svg\";","module.exports = __webpack_public_path__ + \"static/media/recipe.706c637e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.6e46c4be.svg\";","module.exports = __webpack_public_path__ + \"static/media/home_on.bdc127bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/messages_on.c7e0802b.svg\";","module.exports = __webpack_public_path__ + \"static/media/recipe_on.433ec6c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile_on.b0609d39.svg\";","import React, { Component } from 'react';\nimport fork from './images/fork.svg'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className = \"mainmenu\">\n        <div className = \"topbar\">\n          <div className = \"name\">Home</div>\n          <div className = \"addbtn\">+</div>\n        </div>\n       <div className =\"feedCard\">\n        <div className =\"profilePic\" />\n        <div className = \"Messages\">\n          <div className = \"sent\">\n           June shared Young, Annette\n          </div>\n          <div className = \"message\">\n          This is awesome üçÖüå∂\n          </div>\n          <div className = \"recipe\">\n          Kate's super chilli\n          </div>\n        </div>\n       </div>\n\n        <div className =\"feedCard\">\n        <div className =\"profilePic\" />\n        <div className = \"Messages\">\n          <div className = \"sent\">\n           Jin shared Jane\n          </div>\n          <div className = \"message\">\n          I lost 3 lbs with this üí£\n          </div>\n          <div className = \"recipe\">\n            <img src={fork} className = \"fork\" />\n            <div>\n            Green smoothies\n            </div>\n          </div>\n        </div>\n       </div>\n\n        <div className =\"feedCard\">\n        <div className =\"profilePic\" />\n        <div className = \"Messages\">\n          <div className = \"sent\">\n          Jane shared Smith\n          </div>\n          <div className = \"message\">\n          It was super sweet ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è \n          </div>\n          <div className = \"shared_recipe\">\n            <div className = \"preview\" />\n            <div className = \"recipe_content\">\n            <div className = \"title\">NYT Cooking</div>\n              Grandma's Creme Breele\n              </div>\n          </div>\n        </div>\n       </div>\n\n          <div className =\"feedCard\">\n        <div className =\"profilePic\" />\n        <div className = \"Messages\">\n          <div className = \"sent public\">\n           June shared Young, Annette\n          </div>\n          <div className = \"message\">\n          For today‚Äôs dinner ü••\n          </div>\n          <div className = \"recipe\">\n          Lin‚Äôs coconut curryü••\n          </div>\n        </div>\n       </div>\n\n          <div className =\"feedCard\">\n        <div className =\"profilePic\" />\n        <div className = \"Messages\">\n          <div className = \"sent\">\n           June shared Lin\n          </div>\n          <div className = \"message\">\n          Try this ü•û\n          </div>\n          <div className = \"recipe\">\n          souffle pancake\n          </div>\n        </div>\n       </div>\n\n        <div className =\"feedCard\">\n        <div className =\"profilePic\" />\n        <div className = \"Messages\">\n          <div className = \"sent\">\n           June shared Lin\n          </div>\n          <div className = \"message\">\n          Try this ü•û\n          </div>\n          <div className = \"recipe\">\n          souffle pancake\n          </div>\n        </div>\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport home from './images/home.svg';\nimport mail from './images/messages.svg';\nimport recipe from './images/recipe.svg';\nimport profile from './images/profile.svg';\nimport homeOn from './images/home_on.svg';\nimport mailOn from './images/messages_on.svg';\nimport recipeOn from './images/recipe_on.svg';\nimport profileOn from './images/profile_on.svg';\nimport fork from './images/fork.svg'\nimport Home from './home.js'\nimport './App.scss';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n    }\n    this.home = [home, homeOn];\n    this.msg = [mail, mailOn];\n    this.recipe = [recipe, recipeOn];\n    this.profile = [profile, profileOn];\n\n    this.menu = [this.home[1], this.msg[0], this.recipe[0], this.profile[0]];\n    \n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className = \"screen\">\n          <Home />\n          <div className = \"footbar\" >\n            <img src = {this.menu[0]} />\n            <img src = {this.menu[1]} />\n            <img src = {this.menu[2]} />\n            <img src= {this.menu[3]} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}